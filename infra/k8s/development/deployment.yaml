apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-backend
  labels:
    app: nestjs-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nestjs-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nestjs-backend
    spec:
      containers:
      - name: nestjs-backend
        image: <DOCKER_IMAGE>:<TAG>
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: nestjs-config 
        env: 
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nestjs-secret
              key: DATABASE_URL
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nestjs-backend-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nestjs-backend
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nestjs-config
data:
  REDIS_HOST: redis-service
  REDIS_PORT: 6379
  PORT: 3000
---
apiVersion: v1
kind: Secret
metadata:
  name: nestjs-secret
type: Opaque
data:
  DATABASE_URL:
  AUTH0_PUBLIC_KEY:
  AUTH0_AUDIENCE:
  AUTH0_DOMAIN:
  AUTH0_CLIENT_ID:
  AUTH0_CLIENT_SECRET:
  AUTH0_CRYPTO_CONNECTION_NAME:
  UNLEASH_URL:
  UNLEASH_APP_NAME:
  UNLEASH_INSTANCE_ID:
  COVALENT_API_KEY:
  QUICK_NODE_API_KEY:
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nestjs-backend-ingress
spec:
  rules:
  - host: nestjs-backend.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nestjs-backend-service
            port:
              number: 80
